# =============================================================================
# 国会議事録検索・分析アプリケーション - UIコンポーネント
# =============================================================================
# 
# 概要:
# このファイルはアプリケーションのUIコンポーネントを定義します。
# 主にサイドバーの表示とページ選択機能を提供します。
# 
# 課題2: Streamlitを使ったアプリの開発 + 公開
# 学籍番号: [学籍番号]
# 作成者: [名前]
# 作成日: 2024年8月
# 
# 主要機能:
# - サイドバーの表示・管理
# - ページ選択機能
# - セッション状態の管理
# - 条件付き機能の表示制御
# 
# 依存関係:
# - streamlit: UIフレームワーク
# - janome: 形態素解析（オプション）
# 
# 開発環境:
# - Anaconda仮想環境
# - Python 3.8+
# 
# バージョン: 1.1.0
# =============================================================================

import streamlit as st

def show_sidebar():
    """
    サイドバーの表示とページ選択機能
    
    機能:
    - サイドバーにメニューを表示
    - ページ選択の処理
    - セッション状態の管理
    - 条件付き機能の表示制御
    
    戻り値:
    - str: 選択されたページ名
    
    ページオプション:
    - 🔍 検索: 基本検索機能
    - 📊 分析: 統計分析機能
    - 🏛️ 会議別キーワード分析: キーワード分析（Janome必要）
    - 📚 検索履歴: 履歴管理機能
    - ℹ️ 使い方: ヘルプ・ドキュメント
    
    セッション状態:
    - current_page: 現在選択されているページ
    """
    
    with st.sidebar:
        # =====================================================================
        # サイドバーヘッダー
        # =====================================================================
        
        st.markdown("### 🔍 検索メニュー")
        st.markdown("---")
        
        # =====================================================================
        # ページオプションの定義
        # =====================================================================
        
        # 基本ページオプション
        page_options = [
            "🔍 検索",           # 基本検索機能
            "📊 分析",           # 統計分析機能
            "📚 検索履歴",       # 履歴管理機能
            "ℹ️ 使い方"          # ヘルプ・ドキュメント
        ]
        
        # =====================================================================
        # 条件付き機能の追加
        # =====================================================================
        
        # Janomeライブラリが利用可能な場合のみキーワード分析を追加
        try:
            from janome.tokenizer import Tokenizer
            # キーワード分析を適切な位置に挿入（分析機能の後に配置）
            page_options.insert(2, "🏛️ 会議別キーワード分析")
            st.success("✅ キーワード分析機能が利用可能です")
        except ImportError:
            st.warning("⚠️ キーワード分析機能は利用できません（Janome未インストール）")
        
        # =====================================================================
        # 現在のページ状態の取得
        # =====================================================================
        
        # セッション状態から現在のページを取得
        # デフォルトは検索ページ
        current_page = st.session_state.get('current_page', "🔍 検索")
        
        # =====================================================================
        # ページ選択UIの表示
        # =====================================================================
        
        # ページ選択のデフォルト値を設定
        default_index = 0  # デフォルトは検索ページ
        if current_page in page_options:
            default_index = page_options.index(current_page)
        
        # セレクトボックスでページ選択
        page = st.selectbox(
            label="ページを選択",
            options=page_options,
            index=default_index,
            help="利用したい機能のページを選択してください"
        )
        
        # =====================================================================
        # ページ変更の処理
        # =====================================================================
        
        # ページが変更された場合はセッション状態を更新
        if page != current_page:
            st.session_state['current_page'] = page
            st.success(f"✅ {page}ページに切り替えました")
        
        # =====================================================================
        # サイドバー情報の表示
        # =====================================================================
        
        st.markdown("---")
        st.markdown("### 📊 アプリケーション情報")
        
        # 利用可能な機能の表示（独自にチェック）
        available_features = []
        
        # Janome（形態素解析）の利用可能性チェック
        try:
            from janome.tokenizer import Tokenizer
            available_features.append("✅ 形態素解析")
        except ImportError:
            available_features.append("❌ 形態素解析")
            
        # WordCloud（ワードクラウド）の利用可能性チェック
        try:
            from wordcloud import WordCloud
            available_features.append("✅ ワードクラウド")
        except ImportError:
            available_features.append("❌ ワードクラウド")
        
        # 機能一覧を表示
        for feature in available_features:
            st.markdown(f"- {feature}")
        
        # =====================================================================
        # ヘルプ情報の表示
        # =====================================================================
        
        st.markdown("---")
        st.markdown("### 💡 ヒント")
        st.markdown("""
        - **検索**: キーワードや期間で議事録を検索
        - **分析**: 検索結果の統計情報を確認
        - **履歴**: 過去の検索条件を再利用
        - **使い方**: 詳細な使用方法を確認
        """)
        
        return page
